#!/bin/bash
#################################################################################
# License: MIT
#
# Copyright 2023 Slackjeff (slackjeff@riseup.net)
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#
#################################################################################
# Poison Linux security
##################################################################################

# All services list here.
serviceList=('hidepid' 'clear_tmpfs' 'wxprotect')

# have service exec permission?
for service in "rc.${serviceList[@]}"; do
    receive=$(echo "$service" | cut -d . -f 2)
    if [ -x /etc/rc.d/rc.poison.d/$service ]; then
	    eval $receive=on
    else
	    eval $receive=off
    fi
done
unset service
unset receive

# Execute menu dialog.
option=$(
    dialog --backtitle 'Poison Linux Hardening Security' --item-help --title 'Hardening Security Options' --stdout \
           --checklist 'Hardening Security Options' 0 0 0                                                          \
           hidepid 'Hide PID from other unprivileged users' $hidepid                          \
           "Prevent non-privileged users from seeing information about other users processes" \
           clear_tmpfs '' $clear_tmpfs                                                        \
           "blalalala"                                                                        \
           wxprotect 'Enable W^X page protection' $wxprotect                                  \
           "Prevents code injection attacks by enforcing a strict separation abetween writable and executable memory pages."
)

# Receive the options selected by the user
# and insert into array.
IFS=' ' read -r -a option_array <<< "$option"

for service in "${serviceList[@]}"; do
    if [[ "${option_array[@]}" =~ "$service" ]]; then
        echo "Usuario selecionou: $service"
    fi
done
